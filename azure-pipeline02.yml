trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'myServiceConnection'

  # Web app name
  # webAppName: 'mywebapp248927'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'mydevopsvmenv'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.9
  pythonVersion: '3.9'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: myAgentPool
    steps:
    # - script: |
    #     python -m venv mypy3env
    #     source /mypy3env/bin/activate
    #     python -m pip install --upgrade pip
    #     pip install setup
    #     pip install -r requirements.txt
    #   # workingDirectory: '${System.DefaultWorkingDirectory}'
    #   # workingDirectory: $(projectRoot)
    #   displayName: "Install requirements"

    - task: CmdLine@2
      continueOnError: true
      displayName: "Run commands"
      inputs:
        script: |           
          export PATH=$HOME/.local/bin:$PATH
          make install
      
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: $(projectRoot)
        # rootFolderOrFile: '${System.DefaultWorkingDirectory}'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - upload: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      displayName: 'Upload package'
      artifact: drop

    - task: AzureWebApp@1
      displayName: 'runWebApp'
      inputs:
        rootFolderOrFile: $(projectRoot)
        # rootFolderOrFile: '${System.DefaultWorkingDirectory}'
        command:
        # 'az webapp up --runtime PYTHON:3.9 --sku B1s --logs --name mywebapp248927 --resource-group azuredevops'
         'az webapp up --name myWebApp248927 --resource-group Azuredevops --sku F1s --logs --runtime PYTHON:3.9'
        
    - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
      displayName: 'Terrafom installation'
      inputs:
        terraformVersion: latest
      
    - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      inputs:
        command: 'init'
        commandOptions: 'init'
        backendType: 'azurerm'
        backendServiceArm: 'myServiceConnection'
        backendAzureRmSubscriptionId: '64b5de4c-738a-488c-9d2c-0a702a6d086a'
        backendAzureRmResourceGroupName: 'Azuredevops'
        backendAzureRmStorageAccountName: '/subscriptions/64b5de4c-738a-488c-9d2c-0a702a6d086a/resourceGroups/Azuredevops/providers/Microsoft.Storage/storageAccounts/mydevopsdemoblob'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'test.terraform.tfstate'
        allowTelemetryCollection: false

    - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
      inputs:
        command: 'apply'
        commandOptions: 'apply'
        backendType: 'azurerm'
        backendServiceArm: 'myServiceConnection'
        backendAzureRmSubscriptionId: '64b5de4c-738a-488c-9d2c-0a702a6d086a'
        backendAzureRmResourceGroupName: 'Azuredevops'
        backendAzureRmStorageAccountName: '/subscriptions/64b5de4c-738a-488c-9d2c-0a702a6d086a/resourceGroups/Azuredevops/providers/Microsoft.Storage/storageAccounts/mydevopsdemoblob'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'test.terraform.tfstate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        # environmentServiceNameAzureRM: '$(azureServiceConnectionId)'
        allowTelemetryCollection: false

    - task: CmdLine@2
      displayName: "Run Data Validation Tests"
      continueOnError: true
      inputs:
        script: 'newman run TestSuite.Data-Validation.json -e test.environment.json --reporters cli,junit --reporter-junit-export TEST-DataValidation.xml'
        workingDirectory: '$(System.DefaultWorkingDirectory)/automatedtesting/postman'

    - task: CmdLine@2
      continueOnError: true
      displayName: "Run data validation commands"
      inputs:
        script: 'newman run automatedtesting/postman/StarterAPIs.json -e automatedtesting/postman/test_environment.json --reporters cli,junit --reporter-junit-export Results\junitReport.xml'
        workingDirectory: $(System.DefaultWorkingDirectory)'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'
        searchFolder: '$(System.DefaultWorkingDirectory)/automatedtesting/jmeter'
        mergeTestResults: true
        testRunTitle: 'JUnit Results'    
      
    - task: ArchiveFiles@2
      displayName: 'Archive UI Tests'
      inputs:
        #contents: 'automatedtesting/selenium/**'
        #targetFolder: '$(Build.StagingDirectory)'
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/selenium'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-uitests.zip'

     # Selenium Test Suite - Publish the package  
    - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-uitests.zip'
      # Same as the archiveFile artifact above. 
      displayName: 'Upload Package'
      artifact: drop-uitests

    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
      displayName: 'Upload Package'
      artifact: drop-fakerestapi

    - task: ArchiveFiles@2
      displayName: 'Archive PerformanceTestSuite'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/automatedtesting/jmeter'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-perftests.zip'
    # JMeter Test Suite - Publish    
    - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-perftests.zip'
      displayName: 'Upload Package'
      artifact: drop-perftests

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool: myAgentPool
    environment: '$(environmentName)'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : mywebapp248927'
            inputs:
              azureSubscription: '$(azureServiceConnectionId)'
              appName: '$(webAppName)'
              appType: webApp
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              #SourceFolder: '$(Pipeline.Workspace)/dropScripts'
              #Contents: '**'
              #TargetFolder: '$(Agent.TempDirectory)'
              #OverWrite: true
          - task: Bash@3
            displayName: 'Functional tests'
            inputs:
              targetType: 'inline'
              script: |           
                #! /bin/bash
              
                sudo apt-get upgrade -y
                sudo apt-get install python3-pip -y
                sudo apt-get install unzip -y
                sudo apt-get install -y chromium-browser
                pip3 install selenium
                wget -N https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -P ~/
                unzip ~/chromedriver_linux64.zip -d ~/                
                sudo mv -f ~/chromedriver $HOME/.local/bin/chromedriver
                sudo chown root:root $HOME/.local/bin/chromedriver
                sudo chmod 0774 $HOME/.local/bin/chromedriver
                wget "https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.6.3.tgz"
                tar -xf apache-jmeter-5.6.1.tgz
                unzip -o $(Build.BuildId)-perftests.zip
                ./apache-jmeter-5.6.1/bin/jmeter -n -t PerformanceTestSuite.jmx -j jmeter.log -f
                cat jmeter.log
                cd ~/
                DIR=/home/testuser/app
                if [ ! -d "$DIR" ]; then
                    mkdir app
                fi
                mv /home/testuser/devopsagent/_work/1/drop-uitests/$(Build.BuildId)-uitests.zip app
                cd app
                unzip -o $(Build.BuildId)-uitests.zip
                FILE=/home/testuser/app/chromedriver_linux64.zip
                if [ ! -f "$FILE" ]; then
                    LATEST=$(wget -q -O - http://chromedriver.storage.googleapis.com/LATEST_RELEASE)
                    wget http://chromedriver.storage.googleapis.com/$LATEST/chromedriver_linux64.zip
                    unzip -o chromedriver_linux64.zip
                    sudo ln -s $PWD/chromedriver $HOME/.local/bin/chromedriver
                fi
                export PATH=$PATH:/home/testuser/app
                echo "Starting Selenium Tests"
                python3 add_remove_from_cart.py >> selenium.log
                echo "Completed Selenium Tests. Check selenium.log for results."

          - task: CmdLine@2
            displayName: 'units'
            inputs:
              script: |
                python3 $(System.DefaultWorkingDirectory)/login.py
          - task: JMeterInstaller@0
            displayName: 'junitInstall'

          - task: Bash@3
            displayName: 'unitTests'
            inputs:
              targetType: 'inline'
              script: |
                'jmeter -n -t automatedtesting/jmeter/Starter.jmx -JCsvPath=automatedtesting/jmeter/NumberOfUsers.csv -JstressTestUsers=10 -JEnduranceTestUsers=0'
            
          - task: Bash@3
            displayName: 'unitTests'
            inputs:
              targetType: 'inline'
              script: |
                'jmeter -n -t automatedtesting/jmeter/Starter.jmx -JCsvPath=automatedtesting/jmeter/NumberOfUsers.csv -JstressTestUsers=0 -JEnduranceTestUsers=10'
#clean-res:

